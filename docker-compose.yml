version: '3.4'

#  Settings and configurations that are common for all MINIO containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-05-26T05-48-41Z
  command: server --console-address ":9001" http://minio{1...4}/data
  networks:
    - fac
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
    interval: 30s
    timeout: 20s
    retries: 3

volumes:
  db_data:
  wso2is_data:
  wso2is_userstores:
  wso2is_db_init:
  wso2is_identity_db_data:
  wso2is_shared_db_data:
  wso2is_userstore_db_data:
  wso2is7_data:
  wso2is7_userstores:
  wso2is7_db_init:
  wso2is7_identity_db_data:
  wso2is7_shared_db_data:
  wso2is7_userstore_db_data:
  redis_queue_data:
  minio_data1:
  minio_data2:
  minio_data3:
  minio_data4:
  duine_data:

networks:
  fac:
    driver: bridge

services:
  postgres:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/postgresql/uuid-ossp.sql:/docker-entrypoint-initdb.d/uuid-ossp.sql
    networks:
      - fac

  redis:
    image: redis:6.0-alpine
    restart: always
    ports:
      - 6379:6379
    networks:
      - fac

  redis_queue:
    image: redis:6.0-alpine
    restart: always
    command: redis-server --save 60 1 --appendonly yes --appendfsync always --loglevel warning
    volumes:
      - redis_queue_data:/data
    ports:
      - 6380:6379
    networks:
      - fac

  mailhog:
    image: mailhog/mailhog:v1.0.0
    restart: always
    ports:
      - '8025:8025'
      - '8125:1025'
    networks:
      - fac

  # WSO2IS 5.11
  # wso2is:
  #   image: docker.wso2.com/wso2is:5.11.0
  #   restart: always
  #   ports:
  #     - 9443:9443
  #   volumes:
  #     - ./docker/wso2is/deployment.toml:/home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
  #     - ./docker/wso2is/postgresql-42.2.18.jar:/home/wso2carbon/wso2-artifact-volume/repository/components/lib/postgresql-42.2.18.jar
  #     - wso2is_data:/home/wso2carbon/wso2is-5.11.0/repository/database
  #     - wso2is_userstores:/home/wso2carbon/wso2is-5.11.0/repository/deployment/server/userstores
  #     - ./docker/wso2is/FIRMASENLINEA_userstore.xml:/home/wso2carbon/wso2is-5.11.0/repository/deployment/server/userstores/FIRMASENLINEA.xml
  #     - wso2is_db_init:/home/wso2carbon/wso2is-5.11.0/dbscripts
  #   networks:
  #     - fac

  # wso2is_identity_db_postgres:
  #   image: postgres:13-alpine
  #   depends_on:
  #     - wso2is
  #   restart: always
  #   environment:
  #     POSTGRES_DB: identity_db
  #     POSTGRES_USER: wso2is
  #     POSTGRES_PASSWORD: wso2is
  #   volumes:
  #     - wso2is_db_init:/dbscripts:ro
  #     - ./docker/wso2is/init_identity_db.sh:/docker-entrypoint-initdb.d/init_identity_db.sh:ro
  #     - wso2is_identity_db_data:/var/lib/postgresql/data
  #   networks:
  #     - fac

  # wso2is_shared_db_postgres:
  #   image: postgres:13-alpine
  #   depends_on:
  #     - wso2is
  #   restart: always
  #   environment:
  #     POSTGRES_DB: shared_db
  #     POSTGRES_USER: wso2is
  #     POSTGRES_PASSWORD: wso2is
  #   volumes:
  #     - wso2is_db_init:/dbscripts:ro
  #     - ./docker/wso2is/init_shared_db.sh:/docker-entrypoint-initdb.d/init_shared_db.sh:ro
  #     - wso2is_shared_db_data:/var/lib/postgresql/data
  #   networks:
  #     - fac

  # wso2is_userstore_db_postgres:
  #   image: postgres:13-alpine
  #   depends_on:
  #     - wso2is
  #   restart: always
  #   environment:
  #     POSTGRES_DB: userstore_db
  #     POSTGRES_USER: wso2is
  #     POSTGRES_PASSWORD: wso2is
  #   volumes:
  #     - wso2is_db_init:/dbscripts:ro
  #     - ./docker/wso2is/init_userstore_db.sh:/docker-entrypoint-initdb.d/init_userstore_db.sh:ro
  #     - wso2is_userstore_db_data:/var/lib/postgresql/data
  #   networks:
  #     - fac

  # WSO2IS 7.0
  wso2is7:
    image: wso2/wso2is:7.0.0
    restart: always
    ports:
      - 9443:9443
    volumes:
      - ./docker/wso2is/deployment7.toml:/home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
      - ./docker/wso2is/postgresql-42.2.18.jar:/home/wso2carbon/wso2is-7.0.0/repository/components/dropins/postgresql-42.2.18.jar
      - wso2is7_data:/home/wso2carbon/wso2is-7.0.0/repository/database
      - wso2is7_userstores:/home/wso2carbon/wso2is-7.0.0/repository/deployment/server/userstores
      - ./docker/wso2is/FIRMASENLINEA_userstore7.xml:/home/wso2carbon/wso2is-7.0.0/repository/deployment/server/userstores/FIRMASENLINEA.xml
      - wso2is7_db_init:/home/wso2carbon/wso2is-7.0.0/dbscripts
    networks:
      - fac

  wso2is7_identity_db_postgres:
    image: postgres:13-alpine
    depends_on:
      - wso2is7
    restart: always
    environment:
      POSTGRES_DB: identity_db
      POSTGRES_USER: wso2is
      POSTGRES_PASSWORD: wso2is
    volumes:
      - wso2is7_db_init:/dbscripts:ro
      - ./docker/wso2is/init_identity_db.sh:/docker-entrypoint-initdb.d/init_identity_db.sh:ro
      - wso2is7_identity_db_data:/var/lib/postgresql/data
    networks:
      - fac

  wso2is7_shared_db_postgres:
    image: postgres:13-alpine
    depends_on:
      - wso2is7
    restart: always
    environment:
      POSTGRES_DB: shared_db
      POSTGRES_USER: wso2is
      POSTGRES_PASSWORD: wso2is
    volumes:
      - wso2is7_db_init:/dbscripts:ro
      - ./docker/wso2is/init_shared_db.sh:/docker-entrypoint-initdb.d/init_shared_db.sh:ro
      - wso2is7_shared_db_data:/var/lib/postgresql/data
    networks:
      - fac

  wso2is7_userstore_db_postgres:
    image: postgres:13-alpine
    depends_on:
      - wso2is7
    restart: always
    environment:
      POSTGRES_DB: userstore_db
      POSTGRES_USER: wso2is
      POSTGRES_PASSWORD: wso2is
    volumes:
      - wso2is7_db_init:/dbscripts:ro
      - ./docker/wso2is/init_userstore_db.sh:/docker-entrypoint-initdb.d/init_userstore_db.sh:ro
      - wso2is7_userstore_db_data:/var/lib/postgresql/data
    networks:
      - fac

  pdf_signer:
    image: registry.gitlab.cav.xetid.cu/firmasenlinea/pdf-signer
    restart: always
    networks:
      - fac
    ports:
      - 8080:8080

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - minio_data1:/data
  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - minio_data2:/data
  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - minio_data3:/data
  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - minio_data4:/data
  minio_nginx:
    image: nginx:1.19.0-alpine
    hostname: nginx
    volumes:
      - ./docker/minio/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - fac
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  postgres-duine:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_DB: duine
      POSTGRES_USER: duine
      POSTGRES_PASSWORD: secret
    ports:
      - 5433:5432
    volumes:
      - duine_data:/var/lib/postgresql/data
    networks:
      - fac

  duine:
    image: registry.gitlab.cav.xetid.cu/firmasenlinea/duine
    restart: always
    environment:
      NODE_ENV: development
      PORT: 3003
      DB_NAME: duine
      DB_USER: duine
      DB_PASSWORD: secret
      DB_HOST: postgres-duine
      DB_PORT: 5432
    ports:
      - 3003:3003
    networks:
      - fac
